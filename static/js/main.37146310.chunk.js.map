{"version":3,"sources":["components/ShoppingListItem/ShoppingListItem.js","components/ShoppingList/ShoppingList.js","components/StatusMessage/StatusMessage.js","components/EmptyMessage/EmptyMessage.js","components/AddListItem/AddListItem.js","App.js","index.js"],"names":["ShoppingListItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","completed","inherits","createClass","key","value","_this$props$listitem","props","listitem","id","title","inStock","stockMessage","react_default","a","createElement","className","type","onChange","toggleComplete","bind","htmlFor","onClick","deleteListItem","Component","ShoppingList","listitems","map","components_ShoppingListItem_ShoppingListItem","StatusMessage","isMessage","changedItemTitle","role","aria-live","messageType","EmptyMessage","emptyMessage","AddListItem","state","disableSubmit","changeForm","e","setState","target","submitForm","preventDefault","addListItem","onSubmit","name","placeholder","disabled","App","uuid","v4","changedItemKey","updateMessage","checkEmpty","result","find","toConsumableArray","filter","newId","newListItem","messageId","messageTitle","components_AddListItem_AddListItem","components_ShoppingList_ShoppingList","components_StatusMessage_StatusMessage","components_EmptyMessage_EmptyMessage","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.37146310.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ShoppingListItem.scss';\n\n\nexport class ShoppingListItem extends Component {\n\n  getStyle = (completed) => {\n    if (completed) {\n      return \" shoppinglistitem__list-item_checked\";\n    }\n    else {\n      return \"\";\n    }\n  }\n\n\n\n  render() {\n    const { id, title, inStock, completed } = this.props.listitem;\n\n    var stockMessage = \"\";\n\n    if (inStock) {\n      stockMessage = \"In stock\";\n    }\n    else {\n      stockMessage = \"Out of stock\";\n    }\n\n    return (\n      <li className={\"shoppinglistitem__list-item\" + this.getStyle(completed)}>\n        <input type=\"checkbox\" className=\"shoppinglistitem__checkbox\" id={\"shoppinglistitem__checkbox_checkbox-\" + id} onChange={this.props.toggleComplete.bind(this, id)} />\n        <label htmlFor={\"shoppinglistitem__checkbox_checkbox-\" + id} className=\"shoppinglistitem__checkbox-label\">{title} ({stockMessage})</label>\n        <button className=\"shoppinglistitem__delete-button\" onClick={this.props.deleteListItem.bind(this, id)}>X</button>\n      </li>\n    )\n  }\n}\n\n// PropTypes\nShoppingListItem.propTypes = {\n  listitem: PropTypes.object.isRequired\n}\n\nexport default ShoppingListItem;\n","import React, { Component } from 'react';\nimport ShoppingListItem from \"../ShoppingListItem/ShoppingListItem\";\nimport PropTypes from 'prop-types';\n\nimport './ShoppingList.scss';\n\nclass ShoppingList extends Component {\n\n  render() {\n    return this.props.listitems.map( (listitem) => (\n      <ShoppingListItem key={listitem.id} listitem={listitem} toggleComplete={this.props.toggleComplete} deleteListItem={this.props.deleteListItem} />\n    ));\n  }\n}\n\n\n// PropTypes\nShoppingList.propTypes = {\n  listitems: PropTypes.array.isRequired\n}\n\nexport default ShoppingList;\n","import React, { Component } from 'react';\n\nimport './StatusMessage.scss';\n\nexport class StatusMessage extends Component {\n\n\n  render() {\n\n    var isMessage = false;\n    if (this.props.changedItemTitle !== \"\") {\n      isMessage = true;\n    }\n\n    return (\n      <div className=\"status-message__message-wrapper\" role=\"region\" aria-live=\"polite\">\n        {this.props.changedItemTitle}\n        {isMessage ? (\n          \" was \"\n        ) : \"\"\n        }\n        {this.props.messageType}\n      </div>\n    )\n  }\n}\n\nexport default StatusMessage;\n","import React, { Component } from 'react';\n\nimport './EmptyMessage.scss';\n\nexport class EmptyMessage extends Component {\n\n\n  render() {\n\n    if (this.props.emptyMessage) {\n      return (\n        <div className=\"empty-message__message-wrapper\">\n          Empty message here\n          </div>\n      )\n    }\n\n    else {\n      return (\n        \"\"\n      )\n    }\n  }\n\n}\n\nexport default EmptyMessage;\n","import React, { Component } from 'react';\n\nimport './AddListItem.scss';\n\nexport class AddListItem extends Component {\n\n  state = {\n    title: '',\n    disableSubmit: true\n  }\n\n  changeForm = (e) => {\n    this.setState({ title : e.target.value });\n    if(e.target.value !== '') {\n      this.setState({ disableSubmit : false });\n    }\n    else {\n      this.setState({ disableSubmit : true });\n    }\n  }\n\n  submitForm = (e) => {\n    e.preventDefault();\n    this.props.addListItem(this.state.title);\n    this.setState({ title: '' });\n  }\n\n\n  render() {\n\n\n      return (\n        <div className=\"add-list-item__wrapper\">\n          <form onSubmit={this.submitForm}>\n            <label htmlFor=\"add-list-item__input\">Add item</label>\n            <input type=\"text\" id=\"add-list-item__input\" name=\"add-list-item__input\" className=\"add-list-item__input\" placeholder=\"Add item here\" onChange={this.changeForm} value={this.state.title} />\n            <button type=\"submit\" value=\"add-list-item__submit\" disabled={this.state.disableSubmit}>Submit</button>\n          </form>\n          </div>\n      )\n  }\n\n\n\n}\n\nexport default AddListItem;\n","import React, { Component } from 'react';\nimport uuid from 'uuid';\n\nimport ShoppingList from './components/ShoppingList/ShoppingList';\nimport StatusMessage from './components/StatusMessage/StatusMessage';\nimport EmptyMessage from './components/EmptyMessage/EmptyMessage';\nimport AddListItem from './components/AddListItem/AddListItem';\n\nimport './App.scss';\n\n\nclass App extends Component {\n\n  state = {\n    listitems: [\n      {\n        id: uuid.v4(),\n        title: 'Take out the trash',\n        inStock: true,\n        completed: false\n      },\n      {\n        id: uuid.v4(),\n        title: 'Clean the dishes',\n        inStock: true,\n        completed: false\n      },\n      {\n        id: uuid.v4(),\n        title: 'Make coffee',\n        inStock: true,\n        completed: false\n      },\n    ],\n\n    messageType: \"\",\n    changedItemKey: \"\",\n    changedItemTitle: \"\",\n    emptyMessage: false\n  }\n\n\n  // Toggle list item\n  toggleComplete = (id) => {\n    this.setState(\n      {\n        listitems: this.state.listitems.map(listitem => {\n          if (listitem.id === id) {\n            listitem.completed = !listitem.completed;\n\n            // Update message after toggling checkbox\n            if (listitem.completed === true) {\n              this.updateMessage(listitem.id, listitem.title, \"checked\");\n            }\n            else {\n              this.updateMessage(listitem.id, listitem.title, \"unchecked\");\n            }\n\n          }\n          return listitem;\n        }\n        )\n      });\n  }\n\n\n  // Check if there are no more items\n  checkEmpty = () => {\n    if (this.state.listitems.length === 0) {\n      this.setState(\n        {\n          emptyMessage: true,\n        }\n      );\n    }\n  }\n\n\n  // Delete list item\n  deleteListItem = (id) => {\n    var result = this.state.listitems.find(e => e.id === id);\n\n    // update the message first before we remove the item from the array\n    this.updateMessage(result.id, result.title, \"deleted\");\n\n    // using a callback since setState is asynch\n    this.setState(\n      {\n        listitems: [...this.state.listitems.filter(listitem => listitem.id !== id)],\n      }, () => this.checkEmpty()\n    );\n\n  }\n\n  // Add list item\n  addListItem = (title) => {\n\n    const newId = uuid.v4();\n\n    const newListItem = {\n      id: newId,\n      title: title,\n      inStock: true,\n      completed: false\n    }\n    this.setState({ listitems: [...this.state.listitems, newListItem] });\n\n    this.updateMessage(newId, title, \"added\");\n  }\n\n\n  // update the message as needed. Probably can make this more streamlined.\n  updateMessage = (messageId, messageTitle, messageType) => {\n\n    this.setState(\n      {\n        messageType: messageType,\n        changedItemKey: messageId,\n        changedItemTitle: messageTitle,\n      }\n    );\n\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <h2>\n          Shopping list\n        </h2>\n\n        <AddListItem addListItem={this.addListItem} />\n\n        {/* ToDo: move <ul> tags inside of ShoppingList component */}\n        <ul>\n          <ShoppingList listitems={this.state.listitems} toggleComplete={this.toggleComplete} deleteListItem={this.deleteListItem} />\n        </ul>\n\n        <StatusMessage messageType={this.state.messageType} changedItemKey={this.state.changedItemKey} changedItemTitle={this.state.changedItemTitle} />\n\n        <EmptyMessage emptyMessage={this.state.emptyMessage} />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}