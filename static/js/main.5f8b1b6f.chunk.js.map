{"version":3,"sources":["components/ShoppingListItem/ShoppingListItem.js","components/ShoppingList/ShoppingList.js","components/StatusMessage/StatusMessage.js","components/EmptyMessage/EmptyMessage.js","components/AddListItem/AddListItem.js","App.js","index.js"],"names":["ShoppingListItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","completed","inherits","createClass","key","value","_this$props$listitem","props","listitem","id","title","inStock","stockMessage","react_default","a","createElement","className","type","onChange","toggleComplete","bind","htmlFor","onClick","deleteListItem","Component","ShoppingList","listitems","map","components_ShoppingListItem_ShoppingListItem","StatusMessage","isMessage","changedItemTitle","messageType","EmptyMessage","emptyMessage","AddListItem","state","disableSubmit","changeForm","e","setState","target","submitForm","preventDefault","addListItem","onSubmit","name","placeholder","disabled","App","uuid","v4","changedItemKey","updateMessage","checkEmpty","result","find","toConsumableArray","filter","newId","newListItem","messageId","messageTitle","components_AddListItem_AddListItem","components_ShoppingList_ShoppingList","components_StatusMessage_StatusMessage","components_EmptyMessage_EmptyMessage","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.5f8b1b6f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ShoppingListItem.scss';\n\n\nexport class ShoppingListItem extends Component {\n\n  getStyle = (completed) => {\n    if(completed) {\n      return \" shoppinglistitem__list-item_checked\";\n    }\n    else {\n      return \"\";\n    }\n  }\n\n\n\n  render() {\n    const { id, title, inStock, completed } = this.props.listitem;\n\n    var stockMessage = \"\";\n\n    if(inStock) {\n      stockMessage = \"In stock\";\n    }\n    else {\n      stockMessage = \"Out of stock\";\n    }\n\n    return (\n      <li className={\"shoppinglistitem__list-item\" + this.getStyle(completed) }>\n        <input type=\"checkbox\" className=\"shoppinglistitem__checkbox\" id={\"shoppinglistitem__checkbox_checkbox-\" + id} onChange={this.props.toggleComplete.bind(this, id)} />\n        <label htmlFor={\"shoppinglistitem__checkbox_checkbox-\" + id} className=\"shoppinglistitem__checkbox-label\">{ title } ({ stockMessage })</label>\n        <button className=\"shoppinglistitem__delete-button\" onClick={this.props.deleteListItem.bind(this, id)}>X</button>\n      </li>\n    )\n  }\n}\n\n// PropTypes\nShoppingListItem.propTypes = {\n  listitem: PropTypes.object.isRequired\n}\n\nexport default ShoppingListItem;\n","import React, { Component } from 'react';\nimport ShoppingListItem from \"../ShoppingListItem/ShoppingListItem\";\nimport PropTypes from 'prop-types';\n\nclass ShoppingList extends Component {\n\n  render() {\n    return this.props.listitems.map( (listitem) => (\n      <ShoppingListItem key={listitem.id} listitem={listitem} toggleComplete={this.props.toggleComplete} deleteListItem={this.props.deleteListItem} />\n    ));\n  }\n}\n\n\n// PropTypes\nShoppingList.propTypes = {\n  listitems: PropTypes.array.isRequired\n}\n\nexport default ShoppingList;\n","import React, { Component } from 'react';\n\nimport './StatusMessage.scss';\n\nexport class StatusMessage extends Component {\n\n\n  render() {\n\n    var isMessage = false;\n    if(this.props.changedItemTitle !== \"\") {\n      isMessage = true;\n    }\n\n    if(this.props.changedItemTitle !== \"empty\") {\n    return (\n      <div className=\"status-message__message-wrapper\">\n        {this.props.changedItemTitle} \n        {isMessage ? (\n          \" was \"\n        ) : \"\"\n        }\n        {this.props.messageType}\n      </div>\n    )\n      }\n      else {\n        return (\n          <div className=\"status-message__message-wrapper status-message__message-wrapper_empty\">\n          Empty message here\n          </div>\n        )\n      }\n  }\n}\n\nexport default StatusMessage;\n","import React, { Component } from 'react';\n\nimport './EmptyMessage.scss';\n\nexport class EmptyMessage extends Component {\n\n\n  render() {\n\n\n\n\n    if (this.props.emptyMessage) {\n      return (\n        <div className=\"empty-message__message-wrapper\">\n          Empty message here\n          </div>\n      )\n    }\n\n    else {\n      return (\n        \"\"\n      )\n    }\n  }\n\n\n\n}\n\nexport default EmptyMessage;\n","import React, { Component } from 'react';\n\nimport './AddListItem.scss';\n\nexport class AddListItem extends Component {\n\n  state = {\n    title: '',\n    disableSubmit: true\n  }\n\n  changeForm = (e) => {\n    this.setState({ title : e.target.value });\n    if(e.target.value !== '') {\n      this.setState({ disableSubmit : false });\n    }\n    else {\n      this.setState({ disableSubmit : true });\n    }\n  }\n\n  submitForm = (e) => {\n    e.preventDefault();\n    this.props.addListItem(this.state.title);\n    this.setState({ title: '' });\n  }\n\n\n  render() {\n\n\n      return (\n        <div className=\"add-list-item__wrapper\">\n          <form onSubmit={this.submitForm}>\n            <label htmlFor=\"add-list-item__input\">Add item</label>\n            <input type=\"text\" id=\"add-list-item__input\" name=\"add-list-item__input\" className=\"add-list-item__input\" placeholder=\"Add item here\" onChange={this.changeForm} value={this.state.title} />\n            <button type=\"submit\" value=\"add-list-item__submit\" disabled={this.state.disableSubmit}>Submit</button>\n          </form>\n          </div>\n      )\n  }\n\n\n\n}\n\nexport default AddListItem;\n","import React, { Component } from 'react';\nimport uuid from 'uuid';\n\nimport ShoppingList from './components/ShoppingList/ShoppingList';\nimport StatusMessage from './components/StatusMessage/StatusMessage';\nimport EmptyMessage from './components/EmptyMessage/EmptyMessage';\nimport AddListItem from './components/AddListItem/AddListItem';\n\nimport './App.scss';\n\n\nclass App extends Component {\n\n  state = {\n    listitems: [\n      {\n        id: uuid.v4(),\n        title: 'Take out the trash',\n        inStock: true,\n        completed: false\n      },\n      {\n        id: uuid.v4(),\n        title: 'Clean the dishes',\n        inStock: true,\n        completed: false\n      },\n      {\n        id: uuid.v4(),\n        title: 'Make coffee',\n        inStock: true,\n        completed: false\n      },\n    ],\n\n    messageType: \"\",\n    changedItemKey: \"\",\n    changedItemTitle: \"\",\n    emptyMessage: false\n  }\n\n\n  // Toggle list item\n  toggleComplete = (id) => {\n    this.setState(\n      {\n        listitems: this.state.listitems.map(listitem => {\n          if (listitem.id === id) {\n            listitem.completed = !listitem.completed;\n\n            // Update message after toggling checkbox\n            if (listitem.completed === true) {\n              this.updateMessage(listitem.id, listitem.title, \"checked\");\n            }\n            else {\n              this.updateMessage(listitem.id, listitem.title, \"unchecked\");\n            }\n\n          }\n          return listitem;\n        }\n        )\n      });\n  }\n\n\n  // Check if there are no more items\n  checkEmpty = () => {\n    if (this.state.listitems.length === 0) {\n      this.setState(\n        {\n          emptyMessage: true,\n        }\n      );\n    }\n  }\n\n\n  // Delete list item\n  deleteListItem = (id) => {\n    var result = this.state.listitems.find(e => e.id === id);\n\n    // update the message first before we remove the item from the array\n    this.updateMessage(result.id, result.title, \"deleted\");\n\n    // using a callback since setState is asynch\n    this.setState(\n      {\n        listitems: [...this.state.listitems.filter(listitem => listitem.id !== id)],\n      }, () => this.checkEmpty()\n    );\n\n  }\n\n  // Add list item\n  addListItem = (title) => {\n\n    const newId = uuid.v4();\n\n    const newListItem = {\n      id: newId,\n      title: title,\n      inStock: true,\n      completed: false\n    }\n    this.setState({ listitems: [...this.state.listitems, newListItem] });\n\n    this.updateMessage(newId, title, \"added\");\n  }\n\n\n  // update the message as needed. Probably can make this more streamlined.\n  updateMessage = (messageId, messageTitle, messageType) => {\n\n    this.setState(\n      {\n        messageType: messageType,\n        changedItemKey: messageId,\n        changedItemTitle: messageTitle,\n      }\n    );\n\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <h2>\n          Shopping list \n      </h2>\n\n      <AddListItem addListItem={this.addListItem} />\n\n        <ul>\n          <ShoppingList listitems={this.state.listitems} toggleComplete={this.toggleComplete} deleteListItem={this.deleteListItem} />\n        </ul>\n\n        \n\n        <StatusMessage messageType={this.state.messageType} changedItemKey={this.state.changedItemKey} changedItemTitle={this.state.changedItemTitle} />\n\n        <EmptyMessage emptyMessage={this.state.emptyMessage} />\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}